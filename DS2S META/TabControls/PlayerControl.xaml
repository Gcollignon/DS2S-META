<local:METAControl x:Class="DS2S_META.PlayerControl"
             x:Name="PlayerCon"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:wpfTool="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:p="clr-namespace:DS2S_META.Properties"
             xmlns:local="clr-namespace:DS2S_META" xmlns:viewmodels="clr-namespace:DS2S_META.ViewModels"
                   mc:Ignorable="d" 
             d:DesignHeight="785.468" d:DesignWidth="440.0" Background="LightGray"
             d:DataContext="{d:DesignInstance viewmodels:PlayerViewModel, IsDesignTimeCreatable=True}">
    <Grid Grid.Row="0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Margin="0,0,0,10">
            <Label Content="Status"/>
            <Border BorderBrush="Gray" BorderThickness="1" >
                <StackPanel Margin="5,5,5,5">
                    <Grid Grid.Row="0" Grid.RowSpan="2" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Content="Health" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        <wpfTool:IntegerUpDown x:Name="nudHealth" Value="{Binding Path=Hook.Health}" Maximum="{Binding Hook.HealthCap}" TextAlignment="Center" ClipValueToMinMax="True" IsEnabled="False" Grid.Row="1"/>
                        <Label Content="Health Cap" Grid.Column="1" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                        <wpfTool:IntegerUpDown Value="{Binding Path=Hook.HealthCap}" TextAlignment="Center" IsEnabled="False" Grid.Row="1" Grid.Column="1"/>
                        <Label Content="Health Max" Grid.Column="2" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                        <wpfTool:IntegerUpDown Value="{Binding Path=Hook.HealthMax}" TextAlignment="Center" IsEnabled="False" Grid.Column="2" Grid.Row="1"/>
                        <Label Content="Stamina" Grid.Row="2" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        <wpfTool:IntegerUpDown x:Name="nudStamina" Value="{Binding Path=Hook.Stamina}" TextAlignment="Center" Maximum="{Binding Path=Hook.MaxStamina}" ClipValueToMinMax="True" IsEnabled="False" Grid.Row="3" />
                        <Label Content="Stamina Max" Grid.Row="2" Grid.Column="1" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        <wpfTool:IntegerUpDown Value="{Binding Path=Hook.MaxStamina}" TextAlignment="Center" IsEnabled="False" Grid.Row="3" Grid.Column="1"/>
                        <Label Content="Char Type" Grid.Row="4" Grid.Column="2" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                        <TextBox Text="{Binding Path=Hook.CharType, Mode=OneWay}" TextAlignment="Center" IsEnabled="False" Grid.Row="5" Grid.Column="2"/>
                        <Label Content="Team Type" Grid.Row="4" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                        <TextBox Text="{Binding Path=Hook.TeamType, Mode=OneWay}" TextAlignment="Center" IsEnabled="False" Grid.Row="5"/>
                        <Label Content="Invade Type" Grid.Row="4" Grid.Column="1" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                        <TextBox IsEnabled="False" Grid.Row="5" Grid.Column="1"/>
                    </Grid>
                </StackPanel>
            </Border>
        </StackPanel>
        <StackPanel Margin="0,0,0,10" Grid.Row="1">
            <Label Content="Position"/>
            <Border BorderBrush="Gray" BorderThickness="1" >
                <StackPanel Margin="5,5,5,5">
                    <Grid VerticalAlignment="Stretch" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Content="X" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="1"/>
                        <Label Content="Y" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="2"/>
                        <Label Content="Z" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="3"/>
                        <Label Content="Angle" HorizontalAlignment="Center" VerticalContentAlignment="Center" Grid.Column="0" Grid.Row="4"/>
                        <Label Content="Current" Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalContentAlignment="Center"/>
                        <wpfTool:DecimalUpDown x:Name="nudPosX" Value="{Binding Hook.PosX, Mode=OneWay}" Grid.Column="1" Grid.Row="1" TextAlignment="Center" Margin="0,5,0,0" IsEnabled="False"/>
                        <wpfTool:DecimalUpDown x:Name="nudPosY" Value="{Binding Hook.PosY, Mode=OneWay}" Grid.Column="1" Grid.Row="2" TextAlignment="Center" Margin="0,5,0,0" IsEnabled="False"/>
                        <wpfTool:DecimalUpDown x:Name="nudPosZ" Value="{Binding Hook.PosZ, Mode=OneWay}" Grid.Column="1" Grid.Row="3" TextAlignment="Center" Margin="0,5,0,0" IsEnabled="False"/>

                        <Grid Grid.Row="4" Grid.Column="3">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <CheckBox Content="Restore State" x:Name="cbxRestoreState" IsChecked="{Binding RestoreState,Mode=TwoWay, Source={x:Static p:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Button Content="Store" x:Name="btnPosStore" IsEnabled="{Binding EnStorePosition}" Margin="2" Click="btnStore_Click" Grid.Row="1"/>
                            <Button Content="Restore" x:Name="btnPosRestore" IsEnabled="{Binding EnRestorePosition}" Grid.Column="3" Grid.Row="5" Margin="2" Click="btnRestore_Click"/>
                        </Grid>

                        <Label Content="Stable" Grid.Column="2" Grid.Row="0" HorizontalContentAlignment="Center" VerticalAlignment="Center"/>
                        <wpfTool:DecimalUpDown IsEnabled="False" Grid.Column="2" Value="{Binding Hook.StableX, Mode=OneWay}" Grid.Row="1" TextAlignment="Center" Margin="0,5,0,0" />
                        <wpfTool:DecimalUpDown IsEnabled="False" Grid.Column="2" Value="{Binding Hook.StableY, Mode=OneWay}" Grid.Row="2" TextAlignment="Center" Margin="0,5,0,0"/>
                        <wpfTool:DecimalUpDown IsEnabled="False" Grid.Column="2" Value="{Binding Hook.StableZ, Mode=OneWay}" Grid.Row="3" TextAlignment="Center" Margin="0,5,0,0"/>

                        <Label Content="Stored" Grid.Column="3" Grid.Row="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" />
                        <wpfTool:DecimalUpDown x:Name="nudPosStoredX" Grid.Column="3" Grid.Row="1" IsEnabled="False" TextAlignment="Center" Margin="0,5,0,0" />
                        <wpfTool:DecimalUpDown x:Name="nudPosStoredY" Grid.Column="3" Grid.Row="2" IsEnabled="False" TextAlignment="Center" Margin="0,5,0,0"/>
                        <wpfTool:DecimalUpDown x:Name="nudPosStoredZ" Grid.Column="3" Grid.Row="3" IsEnabled="False" TextAlignment="Center" Margin="0,5,0,0"/>

                        <Grid Grid.Row="4" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBox x:Name="txtAngX" Text="{Binding Hook.AngX, Mode=OneWay, StringFormat='{}{0,5:0.00}'}" TextAlignment="Center" IsEnabled="False" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <TextBox x:Name="txtAngY" Text="{Binding Hook.AngY, Mode=OneWay, StringFormat='{}{0,5:0.00}'}" TextAlignment="Center" IsEnabled="False" Grid.Row="1" Grid.Column="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <TextBox x:Name="txtAngZ" Text="{Binding Hook.AngZ, Mode=OneWay, StringFormat='{}{0,5:0.00}'}" TextAlignment="Center" IsEnabled="False" Grid.Row="2" Grid.Column="2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        </Grid>
                        <Grid Grid.Row="4" Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Label Content="Stored Positions" VerticalAlignment="Center" HorizontalContentAlignment="Center"/>
                            <ComboBox x:Name="cmbStoredPositions" Margin ="2" KeyDown="storedPositions_KeyDown" SelectionChanged="storedPositions_SelectionChanged" IsEditable="True" Grid.Row="1" />
                            <Button x:Name="deleteButton" Margin="2" Content="Del" Click="DeleteButton_Click" Grid.Row="2"/>
                        </Grid>

                    </Grid>
                </StackPanel>
            </Border>
        </StackPanel>
        <StackPanel Margin="0,0,0,10" Grid.Row="2">
            <Label Content="Cheats"></Label>
        </StackPanel>
        <Expander Grid.Row="3" HorizontalContentAlignment="Stretch" Margin="10,0,0,0">
            <Expander.Header>
                <TextBlock FontSize="16" Margin="4" FontWeight="Bold"><Run Text="Bonfire"/></TextBlock>
            </Expander.Header>
            <StackPanel>
                <Grid Margin="0,10,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition MinHeight="25"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0.75*"/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Content="Quick Select" x:Name="cbxQuickSelectBonfire" VerticalAlignment="Center" Grid.Row="2" Margin="10,5,0,0" VerticalContentAlignment="Stretch"/>
                    <CheckBox Content="Rest After Warp" IsEnabled="{Binding EnWarpRest}" x:Name="cbxWarpRest" IsChecked="{Binding ChkWarpRest}" Margin="10,5,0,0" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2" VerticalContentAlignment="Stretch"/>
                    <TextBox x:Name="txtSearch" TextChanged="txtSearch_TextChanged" PreviewKeyDown="KeyPressed" PreviewMouseLeftButtonDown="txtSearch_PreviewMouseLeftButtonDown" AutoWordSelection="True" Grid.ColumnSpan="2" Height="NaN" Margin="0,0,0,5"/>
                    <Label x:Name="lblSearch" Foreground="LightSlateGray" Content="Search..." IsEnabled="False" IsHitTestVisible="False" Grid.ColumnSpan="2" Margin="5,0,0,5" VerticalContentAlignment="Center"/>
                    <ComboBox x:Name="cmbBonfire" SelectionChanged="cmbBonfire_SelectionChanged" Grid.Row="1" Grid.ColumnSpan="2" VerticalContentAlignment="Stretch"/>
                    <Button Content="Warp" Command="{Binding BtnWarpCommand}" IsEnabled="{Binding EnWarp}" x:Name="btnWarp" Grid.Column="2" HorizontalContentAlignment="Center" Margin="5,0,5,0" Grid.RowSpan="2" VerticalContentAlignment="Center"/>
                    <Button Content="Unlock All Bonfires" Command="{Binding BtnUnlockBfsCommand}" Grid.Row="3" Grid.ColumnSpan="3" Margin="75,5,75,5"/>
                </Grid>
                <StackPanel Margin="25,0,25,0">
                    <Separator Visibility="Hidden" Height="10"/>
                    <Separator Visibility="Hidden" Height="3"/>
                    <Label Content="Manage Bonfire Levels"/>
                    <Border BorderBrush="Gray" BorderThickness="1" >
                        <StackPanel Margin="25,10,25,10">
                            <ComboBox x:Name="cmbBonfirHub" SelectionChanged="cmbBonfirHub_SelectionChanged" />
                            <Separator Visibility="Hidden" Height="10"/>
                            <StackPanel x:Name="spBonfires">
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </StackPanel>
        </Expander>
        <StackPanel Margin="0,0,0,10" Grid.Row="4">
            <Label Content="Misc"/>
            <Border BorderBrush="Gray" BorderThickness="1">
                <StackPanel Margin="5">
                    
                    <Grid VerticalAlignment="Bottom" Margin="50,5,50,5">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <CheckBox  Width="100" IsChecked="{Binding ChkGravity}" Content="Gravity" x:Name="cbxGravity" IsEnabled="{Binding EnNoGravity}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        <CheckBox  Width="100" IsChecked="{Binding ChkCollision}" Content="Collision" x:Name="cbxCollision" IsEnabled="{Binding EnNoCollision}" Grid.Row="1" VerticalContentAlignment="Center" Padding="0,0,0,0" HorizontalContentAlignment="Center" Margin="0,5,0,0"/>
                        <CheckBox  Width="100" IsChecked="{Binding ChkDisableAi}" Content="Disable AI" x:Name="cbxDisableAI" IsEnabled="{Binding EnDisableAi}" Grid.Row="2" VerticalContentAlignment="Center" Padding="0,0,0,0" HorizontalContentAlignment="Center" Margin="0,5,0,0"/>
                        <CheckBox  Width="100" IsChecked="{Binding ChkRapierOHKO}" Content="Rapier OHKO" x:Name="cbxRapierOHKO" IsEnabled="{Binding EnRapierOHKO}" Padding="0,0,0,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="0,5,0,0" Grid.Row="3"/>
                        <CheckBox  Width="100" IsChecked="{Binding ChkFistOHKO}"  Content="Fist OHKO" x:Name="cbxFistOHKO" IsEnabled="{Binding EnFistOHKO}" Grid.Column="1" Grid.Row="3" VerticalAlignment="Top" Margin="0,5,0,0"/>
                        <CheckBox  Width="100" IsChecked="{Binding ChkNoDeath}" Content="No Death" x:Name="cbxNoDeath" IsEnabled="{Binding EnNoDeath}" Grid.Column="1" Grid.Row="0" VerticalAlignment="Top" Margin="0,5,0,0"/>
                        <CheckBox  Width="100" Content="Modify Speed" x:Name="cbxSpeed" IsEnabled="{Binding EnSpeedhack}" Checked="cbxSpeed_Checked" Unchecked="cbxSpeed_Checked" Grid.Column="1" Grid.Row="1" VerticalAlignment="Top" Margin="0,5,0,0"/>
                        <wpfTool:DecimalUpDown Value="{Binding SpeedValue, Mode=TwoWay, Source={x:Static p:Settings.Default}, 
                    UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" FormatString="F2" Increment=".5" TextAlignment="Center" Name="nudSpeed" ValueChanged="nudSpeed_ValueChanged" LostFocus="nudSpeed_LostFocus" Grid.Row="2" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="0,5,0,0"/>
                    </Grid>
                </StackPanel>
            </Border>
        </StackPanel>
    </Grid>
</local:METAControl>
